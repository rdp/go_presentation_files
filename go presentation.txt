Go: 90% Perfect, 100% of the time
Go: compiled language, cross between Python and C, GC like JVM [node?]
Best presentation evar.

Download and install go [windows, to c:\go, may need reboot]:
http://golang.org/dl/
$ sudo apt-get install golang-go # ubuntu
$ go version # should work [may require new console]

https://golang.org/doc/articles/wiki
$ git clone https://github.com/rdp/go_presentation_files.git
or download https://github.com/rdp/go_presentation_files/archive/master.zip

=== helloworld.go === save file, then run like $ go run program1.go
package main

import "fmt"

func main() {
    fmt.Println("Hello, world")
}
 === goroutines{1,2}.go goroutines ===
 === channels.go ===
 === select.go program ===
 === errorhandling.go error handling ===
 === https://golang.org/doc/articles/wiki/ === everybody pull it up!
 === "Introducing the net/http package" demoserver.go === http://localhost:8080/abc
 === Wiki pages how to save them to disk ("Getting Started/Data Structures") wiki1.go === run it, should create TestPage.txt
 === "Using net/http to serve wiki pages" wiki2.go === manually create file test.txt http://localhost:8080/view/test [can just supplement wiki1.go]
 === "Editing[/Saving] pages" [wiki3.go] === http://localhost:8080/edit/test
 === "The html/template package" [wiki4.go] === http://localhost:8080/edit/test
 === "Error handling" (validation) [wiki5.go] == http://localhost:8080/edit/test_bad_name
 === "Introducing Function Literals and Closures"
(Methods as parameters) wiki6.go === http://localhost:8080/edit/test_bad_name http://localhost:8080/view/test_bad_name
 == "Error handling" (more) wiki7.go ==
 === "Template cacheing" or desired ===